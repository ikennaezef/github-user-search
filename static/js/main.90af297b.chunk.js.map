{"version":3,"sources":["images/githubcat.jpg","pages/Home.js","components/Repo.js","pages/User.js","App.js","reportWebVitals.js","index.js"],"names":["Home","useState","query","setQuery","loading","setLoading","error","setError","setUser","useContext","AppContext","navigate","useNavigate","className","src","gitCat","alt","action","id","onSubmit","e","preventDefault","Axios","get","then","res","data","sessionStorage","setItem","JSON","stringify","catch","err","type","value","onChange","target","icon","faSpinner","spin","Repo","sizeinKB","string","repo","faHdd","name","length","slice","href","html_url","rel","faGithub","description","language","faCodeBranch","forks","faStar","stargazers_count","size","Math","floor","User","user","repos","setRepos","useEffect","getItem","storedUser","parse","storedRepos","repos_url","date","avatar_url","login","created_at","Date","toDateString","email","faEnvelope","twitter_username","faTwitter","location","faMapMarkerAlt","bio","public_repos","followers","following","map","createContext","App","basename","Provider","exact","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.90af297b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/githubcat.47491175.jpg\";","import gitCat from '../images/githubcat.jpg';\r\nimport './Home.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useState, useContext } from 'react';\r\nimport { AppContext } from '../App';\r\nimport Axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Home = () => {\r\n\r\n\tconst [query, setQuery] = useState('');\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [error, setError] = useState(false);\r\n\tconst { setUser } = useContext(AppContext);\r\n\r\n\tconst navigate = useNavigate();\r\n\r\n\tconst searchUser = (e) => {\r\n\t\te.preventDefault();\r\n\t\tsetLoading(true);\r\n\t\tAxios.get(`https://api.github.com/users/${query}`).then(res => {\r\n\t\t\tsetError(false);\r\n\t\t\tsetUser(res.data);\r\n\t\t\tsessionStorage.setItem('githubUser', JSON.stringify(res.data)); // Stores the user to session storage\r\n\t\t\tsetLoading(false);\r\n\t\t\tnavigate('/user'); // Goes to the user page\r\n\t\t}).catch(err => {\r\n\t\t\tsetLoading(false);\r\n\t\t\tsetError(true); // Displays error message\r\n\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"home-wrapper\">\r\n\t\t\t<img src={gitCat} alt=\"github-cat\" className=\"cat\"/>\r\n\t\t\t<h2 className=\"title\">Search your GitHub Profile</h2>\r\n\t\t\t<form action=\"\" id=\"search-form\" onSubmit={searchUser} >\r\n\t\t\t\t<input type=\"text\" className=\"search\" value={query} onChange={ (e) => setQuery(e.target.value) } />\t\t\t\t\r\n\t\t\t\t<button className=\"search-btn\">\r\n\t\t\t\t\t{loading ? <FontAwesomeIcon icon={ faSpinner } spin className='spinner' /> : 'Search'}\r\n\t\t\t\t</button>\r\n\t\t\t</form>\t\r\n\t\t\t{ error && <p className=\"error-msg\">Sorry, there was an error</p> }\t\t\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Home","import './Repo.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\r\nimport { faHdd, faCodeBranch, faStar } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Repo = ({ repo }) => {\r\n\r\n\t// For shortening the repo name\r\n\tconst shorten = (string) => {\r\n\t\tif (string.length > 12) {\r\n\t\t\treturn string.slice(0, 13) + '...';\r\n\t\t} else {\r\n\t\t\treturn string;\r\n\t\t}\r\n\t}\r\n\r\n\t// Converts the repo size to MB if necessary\r\n\tconst formatSize = (sizeinKB) => {\r\n\t\tif (sizeinKB > 1024) {\r\n\t\t\treturn (Math.floor((sizeinKB/1024)*100))/100 + 'MB';\r\n\t\t} else {\r\n\t\t\treturn sizeinKB + 'KB';\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"repo\">\r\n\t\t\t<div className=\"repo-top\">\r\n\t\t\t\t<div className=\"repo-name\">\r\n\t\t\t\t\t<FontAwesomeIcon icon={faHdd} className=\"repo-icon\" />\r\n\t\t\t\t\t<h2>{ shorten(repo.name) }</h2>\r\n\t\t\t\t</div>\r\n\t\t\t\t<a href={ repo.html_url } target=\"_blank\" rel=\"noreferrer\" className=\"github-repo-link\"><FontAwesomeIcon icon={ faGithub } /></a>\t\t\t\t\r\n\t\t\t</div>\t\t\t\r\n\t\t\t<p className=\"desc\"> { repo.description } </p>\r\n\t\t\t<div className=\"repo-details\">\r\n\t\t\t\t{ repo.language && <span className=\"repo-language\"> { repo.language } </span> }\t\t\t\t\r\n\t\t\t\t<span className=\"repo-forks\"> <FontAwesomeIcon icon={ faCodeBranch } /> { repo.forks } </span>\r\n\t\t\t\t<span className=\"repo-stars\"> <FontAwesomeIcon icon={ faStar } /> { repo.stargazers_count } </span>\r\n\t\t\t\t<span className=\"repo-size\"> { formatSize(repo.size) } </span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Repo","import './User.css';\r\nimport { useState, useContext, useEffect } from 'react';\r\nimport { AppContext } from '../App';\r\nimport Axios from 'axios';\r\nimport Repo from '../components/Repo';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGithub, faTwitter } from '@fortawesome/free-brands-svg-icons';\r\nimport { faMapMarkerAlt, faEnvelope } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst User = () => {\r\n\r\n\tconst { user, setUser } = useContext(AppContext);\r\n\tconst [repos, setRepos] = useState([ ]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (user===null) {\r\n\t\t\t// Gets already stored user and repos fom session storage if it exists\r\n\t\t\tif (sessionStorage.getItem('githubUser')) {\r\n\t\t\t\tlet storedUser = JSON.parse(sessionStorage.getItem('githubUser'));\r\n\t\t\t\tsetUser(storedUser);\r\n\t\t\t\tlet storedRepos = JSON.parse(sessionStorage.getItem('userRepos'));\r\n\t\t\t\tsetRepos(storedRepos);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tAxios.get(user.repos_url).then(res => {\r\n\t\t\t\tsetRepos(res.data);\r\n\t\t\t\tsessionStorage.setItem('userRepos', JSON.stringify(res.data));\r\n\t\t\t});\r\n\t\t}\r\n\t}, [ ])\r\n\r\n\t// formats the date to a more readable format\r\n\tconst formatDate = (date) => {\r\n\t\tconst newDate = new Date(date);\r\n\t\treturn newDate.toDateString();\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"user-wrapper\">\r\n\t\t\t<div className=\"banner\">\r\n\t\t\t\t<div className=\"banner-inner\">\r\n\t\t\t\t\t{ user && (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<img src={ user.avatar_url } alt=\"profile-pic\" className=\"profile-image\"/>\r\n\t\t\t\t\t\t\t<div className=\"user-info\">\r\n\t\t\t\t\t\t\t\t<h2 className=\"user-name\">{ user.name }</h2>\r\n\t\t\t\t\t\t\t\t<p className=\"user-login\">{ user.login }</p>\r\n\t\t\t\t\t\t\t\t<p className=\"user-joined\"> <strong>Joined</strong> { formatDate(user.created_at) }</p>\r\n\t\t\t\t\t\t\t\t<div className=\"user-contact\">\r\n\t\t\t\t\t\t\t\t\t{ user.email && <p className=\"user-email\"> <FontAwesomeIcon icon={ faEnvelope } className=\"contact-icon\" /> { user.email } </p> }\r\n\t\t\t\t\t\t\t\t\t{ user.twitter_username && <p className=\"user-twitter\"> <FontAwesomeIcon icon={ faTwitter } className=\"contact-icon\" /> { user.twitter_username } </p> }\r\n\t\t\t\t\t\t\t\t\t{ user.location && <p className=\"user-location\"> <FontAwesomeIcon icon={ faMapMarkerAlt } className=\"contact-icon\" /> { user.location } </p> }\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t{ user.bio && <p className=\"user-bio\">{ user.bio }</p> }\r\n\t\t\t\t\t\t\t\t<a href={ user.html_url } target=\"_blank\" rel=\"noreferrer\" className=\"github-link\"> <FontAwesomeIcon icon={ faGithub } /> Visit on GitHub</a>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</> )}\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t\t<div className=\"body\">\r\n\t\t\t\t<div className=\"body-inner\">\r\n\t\t\t\t\t{ user && (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<div className=\"detail-tablets\">\r\n\t\t\t\t\t\t\t\t<div className=\"detail-tab\"><strong>{ user.public_repos }</strong> repos</div>\r\n\t\t\t\t\t\t\t\t<div className=\"detail-tab\"><strong>{ user.followers }</strong> followers</div>\r\n\t\t\t\t\t\t\t\t<div className=\"detail-tab\"><strong>{ user.following }</strong> following</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<h2 className=\"repos-title\">Repositories</h2>\r\n\t\t\t\t\t\t\t<div className=\"repos-container\">\r\n\t\t\t\t\t\t\t\t{ repos.map(repo => <Repo key={ repo.id } repo={repo} />) }\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\t\t\t\t\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default User","import './App.css';\nimport { HashRouter, Routes, Route } from 'react-router-dom';\nimport { createContext, useState } from 'react';\nimport Home from './pages/Home';\nimport User from './pages/User';\n\n\nexport const AppContext = createContext(null);\n\n\nfunction App() {\n\n  const [user, setUser] = useState(null);\n\n  return (\n    <HashRouter basename=\"/\" >\n      <AppContext.Provider value={{ user, setUser }} >\n        <div className=\"App\">\n          <Routes>\n            <Route exact path='/' element={  <Home/>  } />\n            <Route exact path='/user' element={  <User/>  } />\n          </Routes>\n        </div>        \n      </AppContext.Provider>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}